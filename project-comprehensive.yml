name: LEDMESSENGER
options:
  # Project configuration
  createIntermediateGroups: true  # Create groups for all intermediate directories
  bundleIdPrefix: com.led.messenger  # Default bundle ID prefix
  developmentLanguage: en  # Development language
  usesTabs: false  # Use spaces instead of tabs
  indentWidth: 4  # Number of spaces for indentation
  tabWidth: 4  # Tab width when using tabs
  deploymentTarget:  # Minimum deployment targets
    iOS: 16.0
    macOS: 13.0
  xcodeVersion: "15.0"  # Xcode version to use
  groupSortPosition: top  # Position for the main group
  generateEmptyDirectories: true  # Create empty directories in Xcode groups
  findCarthageFrameworks: false  # Don't look for Carthage frameworks
  groupOrdering:  # Custom grouping ordering
    - pattern: "App"
      order: [first]
    - pattern: "Supporting Files"
      order: [last]
  fileGroups:  # Additional file groups
    - README.md
    - docs
  transitivelyLinkDependencies: true  # Link dependencies of dependencies
  preGenCommand: echo "Pre-generation script"  # Script to run before generating
  postGenCommand: echo "Post-generation script"  # Script to run after generating
  schemePathPrefix: "$(PROJECT_DIR)/../../"  # Prefix for scheme paths
  settingPresets: all  # Include all setting presets

# Project-wide settings
settings:
  # Base settings (for all configurations)
  base:
    SWIFT_VERSION: 5.0
    DEVELOPMENT_TEAM: ${DEVELOPMENT_TEAM}
    ENABLE_PREVIEWS: YES
    ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME: AccentColor
    IPHONEOS_DEPLOYMENT_TARGET: 16.0
    MACOSX_DEPLOYMENT_TARGET: 13.0
    TARGETED_DEVICE_FAMILY: "1,2,6"  # iPhone, iPad, Mac Catalyst
    CLANG_ENABLE_MODULES: YES
    CLANG_CXX_LANGUAGE_STANDARD: "gnu++20"
    SWIFT_OBJC_BRIDGING_HEADER: "LEDMESSENGER/LEDMESSENGER-Bridging-Header.h"
    GCC_OPTIMIZATION_LEVEL: 0
    MTL_ENABLE_DEBUG_INFO: INCLUDE_SOURCE
    CLANG_ANALYZER_NONNULL: YES
    CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION: YES_AGGRESSIVE
    CLANG_ENABLE_OBJC_ARC: YES
    CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING: YES
    CLANG_WARN_EMPTY_BODY: YES
    ENABLE_STRICT_OBJC_MSGSEND: YES
    GCC_NO_COMMON_BLOCKS: YES
    GCC_WARN_UNINITIALIZED_AUTOS: YES_AGGRESSIVE
    COPY_PHASE_STRIP: NO
    GCC_DYNAMIC_NO_PIC: NO

  # Debug configuration settings
  configs:
    Debug:
      SWIFT_OPTIMIZATION_LEVEL: "-Onone"
      SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG
      DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
      GCC_PREPROCESSOR_DEFINITIONS:
        - DEBUG=1
        - "$(inherited)"
      ENABLE_TESTABILITY: YES
      MTL_ENABLE_DEBUG_INFO: INCLUDE_SOURCE
      ONLY_ACTIVE_ARCH: YES
    
    # Release configuration settings
    Release:
      SWIFT_COMPILATION_MODE: wholemodule
      SWIFT_OPTIMIZATION_LEVEL: "-O"
      MTL_ENABLE_DEBUG_INFO: NO
      COPY_PHASE_STRIP: YES
      VALIDATE_PRODUCT: YES
      CODE_SIGN_IDENTITY: "iPhone Distribution"
      DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
      GCC_PREPROCESSOR_DEFINITIONS:
        - "RELEASE=1"
        - "$(inherited)"

# macOS plist settings
macOSInfo:
  path: LEDMESSENGER/Info.plist
  properties:
    NSHumanReadableCopyright: "Copyright Â© 2025 LED MESSENGER. All rights reserved."
    NSMainStoryboardFile: Main
    NSPrincipalClass: NSApplication
    LSMinimumSystemVersion: "$(MACOSX_DEPLOYMENT_TARGET)"
    LSApplicationCategoryType: public.app-category.entertainment
    CFBundleDevelopmentRegion: "$(DEVELOPMENT_LANGUAGE)"
    CFBundleIconFile: AppIcon
    NSAppTransportSecurity:
      NSAllowsLocalNetworking: true

# Custom build configurations
configurations:
  Debug: debug
  Beta: release
  AppStore: release

# File references (for resources, etc.)
fileReferences:
  - path: LEDMESSENGER/Resources/Fonts
    buildPhase: resources

# SPM packages
packages:
  # You could add SPM packages like:
  # Combine:
  #   url: https://github.com/apple/swift-collections
  #   from: 1.0.0

# Build phases
attributes:
  ORGANIZATIONNAME: "LED MESSENGER"

# Build scripts
buildScripts:
  - name: "SwiftLint"
    script: |
      if which swiftlint >/dev/null; then
        swiftlint
      else
        echo "warning: SwiftLint not installed"
      fi
    basedOnDependencyAnalysis: false
    shell: /bin/bash
    runOnlyWhenInstalling: false

# Project targets
targets:
  LEDMESSENGER:
    type: application
    platform: [iOS, macOS]
    
    # Info plist settings
    info:
      path: LEDMESSENGER/Info.plist
      properties:
        CFBundleDisplayName: LED MESSENGER
        CFBundleShortVersionString: "1.0"
        CFBundleVersion: "1"
        LSApplicationCategoryType: public.app-category.entertainment
        LSRequiresIPhoneOS: true
        NSLocalNetworkUsageDescription: LED MESSENGER needs to connect to Resolume on your local network to send messages to the LED wall.
        NSBonjourServices: ["_osc._udp"]
        UIStatusBarStyle: UIStatusBarStyleLightContent
        UIViewControllerBasedStatusBarAppearance: false
        UIUserInterfaceStyle: Dark
        UIApplicationSceneManifest:
          UIApplicationSupportsMultipleScenes: true
          UISceneConfigurations:
            UIWindowSceneSessionRoleApplication:
              - UISceneConfigurationName: Default Configuration
                UISceneDelegateClassName: $(PRODUCT_MODULE_NAME).SceneDelegate
                UISceneStoryboardFile: Main
        UIRequiredDeviceCapabilities: [armv7]
        UISupportedInterfaceOrientations: [UIInterfaceOrientationPortrait, UIInterfaceOrientationLandscapeLeft, UIInterfaceOrientationLandscapeRight]
        UISupportedInterfaceOrientations~ipad: [UIInterfaceOrientationPortrait, UIInterfaceOrientationPortraitUpsideDown, UIInterfaceOrientationLandscapeLeft, UIInterfaceOrientationLandscapeRight]
        
    # Entitlements
    entitlements:
      path: LEDMESSENGER/LEDMESSENGER.entitlements
      properties:
        com.apple.security.network.client: true
        com.apple.security.network.server: true
        com.apple.security.app-sandbox: true
        com.apple.security.files.user-selected.read-only: true
        com.apple.security.network.client: true
        com.apple.security.cs.allow-jit: true
        com.apple.security.device.camera: true
        com.apple.security.device.microphone: true
        com.apple.security.device.audio-input: true
    
    # Source files
    sources:
      - path: LEDMESSENGER
        excludes:
          - "**/.DS_Store"
          - "**/*.md"
        optional: false
        buildPhase: sources
        type: group
        createIntermediateGroups: true
    
    # Resources
    resources:
      - path: LEDMESSENGER/Resources
        excludes:
          - "**/.DS_Store"
      - path: LEDMESSENGER/Assets.xcassets
      - path: LEDMESSENGER/Preview Content
    
    # Prebuild scripts
    preBuildScripts:
      - name: "Generate Version Number"
        script: |
          VERSION_NUMBER=$(/usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" "${INFOPLIST_FILE}")
          BUILD_NUMBER=$CURRENT_PROJECT_VERSION
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $BUILD_NUMBER" "${INFOPLIST_FILE}"
        outputFiles:
          - $(INFOPLIST_FILE)
    
    # Postbuild scripts
    postBuildScripts:
      - name: "Copy dSYMs"
        script: |
          mkdir -p "${PROJECT_DIR}/dSYMs"
          cp -r "${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}" "${PROJECT_DIR}/dSYMs/"
        runOnlyWhenInstalling: true
    
    # Localized files
    localizations:
      - language: en
        regions: [US, GB]
      - language: es
      - language: fr
    
    # Copy files build phase
    copyFiles:
      - destination: productsDirectory
        subpath: Frameworks
        files:
          - "Carthage/Build/iOS/*.framework"
    
    # Headers
    headers:
      public:
        - path: LEDMESSENGER/Public/PublicHeader.h
      private:
        - path: LEDMESSENGER/Private/PrivateHeader.h
    
    # Target-specific settings
    settings:
      base:
        INFOPLIST_FILE: LEDMESSENGER/Info.plist
        PRODUCT_BUNDLE_IDENTIFIER: com.led.messenger.LEDMESSENGER
        PRODUCT_NAME: LEDMESSENGER
        ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
        CURRENT_PROJECT_VERSION: 1
        ENABLE_PREVIEWS: YES
        # Swift optimization flags
        OTHER_SWIFT_FLAGS: "-D CUSTOM_FLAG"
        SWIFT_ACTIVE_COMPILATION_CONDITIONS: APP_SPECIFIC
        # Architectures
        ARCHS: $(ARCHS_STANDARD)
        # Include paths
        HEADER_SEARCH_PATHS:
          - $(SDKROOT)/usr/include
          - $(inherited)
        # Framework search paths
        FRAMEWORK_SEARCH_PATHS:
          - $(PROJECT_DIR)/Frameworks
          - $(inherited)
        # Library search paths
        LIBRARY_SEARCH_PATHS:
          - $(PROJECT_DIR)/Libraries
          - $(inherited)
        # Linking
        LD_RUNPATH_SEARCH_PATHS:
          - "$(inherited)"
          - "@executable_path/Frameworks"
          - "@loader_path/Frameworks"
        # ATS settings
        App_Transport_Security_Settings:
          Allow_Arbitrary_Loads: false
        # iOS specific
        TARGETED_DEVICE_FAMILY: "1,2"
        # macOS specific
        COMBINE_HIDPI_IMAGES: YES
        # Code signing
        CODE_SIGN_STYLE: Automatic
      
      # Configuration-specific settings
      configs:
        Debug:
          SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG APP_SPECIFIC
          OTHER_SWIFT_FLAGS: "-DDEBUG"
          GCC_PREPROCESSOR_DEFINITIONS:
            - DEBUG=1
            - "$(inherited)"
          PRODUCT_NAME: "$(TARGET_NAME) Debug"
          ASSETCATALOG_COMPILER_APPICON_NAME: AppIconDebug
        
        Release:
          SWIFT_COMPILATION_MODE: wholemodule
          GCC_PREPROCESSOR_DEFINITIONS:
            - "RELEASE=1"
            - "$(inherited)"
          PRODUCT_NAME: "$(TARGET_NAME)"
          # Code signing for release
          CODE_SIGN_IDENTITY: "iPhone Distribution"
          PROVISIONING_PROFILE_SPECIFIER: "LED Messenger Distribution"
          
    # Compiler flags
    plist:
      extraEntries:
        ITSAppUsesNonExemptEncryption: false
        LSSupportsOpeningDocumentsInPlace: true
        CFBundleURLTypes:
          - CFBundleURLName: com.led.messenger
            CFBundleURLSchemes:
              - ledmessenger
    
    # Dependencies
    dependencies:
      # Frameworks
      - framework: Accelerate.framework
        weak: true
      - framework: AudioToolbox.framework
      
      # Libraries
      - sdk: libc++.tbd
      
      # Project dependencies for other targets (would be used if you had multiple targets)
      # - target: SomeLibraryTarget
      
      # SPM, Carthage or CocoaPods could be defined here
    
    # Build rules
    buildRules:
      - name: "Process JSON Files"
        filePattern: "*.json"
        script: "cp ${INPUT_FILE_PATH} ${DERIVED_SOURCES_DIR}/"
        outputFiles:
          - $(DERIVED_SOURCES_DIR)/$(INPUT_FILE_NAME)
        compilerSpec: com.apple.build-tools.compiler.json
    
    # Scheme configuration
    scheme:
      testTargets:
        - LEDMESSENGERTests
      gatherCoverageData: true
      language: en
      region: US
      customLLDBInit: "$(PROJECT_DIR)/.lldbinit"
      commandLineArguments:
        "-FIRDebugEnabled": true
        "-UIPreferredUserInterfaceStyle Dark": true
      environmentVariables:
        - variable: OS_ACTIVITY_MODE
          value: disable
          isEnabled: true
      preActions:
        - name: "Run Script"
          script: echo "Starting test run"
          settingsTarget: LEDMESSENGER
      postActions:
        - name: "Run Script"
          script: echo "Finished test run"
          settingsTarget: LEDMESSENGER

  # Test target configuration
  LEDMESSENGERTests:
    type: bundle.unit-test
    platform: [iOS, macOS]
    deploymentTarget:
      iOS: 16.0
      macOS: 13.0
    
    info:
      path: LEDMESSENGERTests/Info.plist
      properties:
        CFBundleDisplayName: LEDMESSENGERTests
        CFBundleShortVersionString: "1.0"
        CFBundleVersion: "1"
    
    sources:
      - path: LEDMESSENGERTests
    
    settings:
      base:
        INFOPLIST_FILE: LEDMESSENGERTests/Info.plist
        PRODUCT_BUNDLE_IDENTIFIER: com.led.messenger.LEDMESSENGERTests
        PRODUCT_NAME: LEDMESSENGERTests
        TEST_HOST: $(BUILT_PRODUCTS_DIR)/LEDMESSENGER.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/LEDMESSENGER
        ENABLE_TESTABILITY: YES
    
    dependencies:
      - target: LEDMESSENGER

  # UI Test target configuration
  LEDMESSENGERUITests:
    type: bundle.ui-testing
    platform: [iOS, macOS]
    deploymentTarget:
      iOS: 16.0
      macOS: 13.0
    
    info:
      path: LEDMESSENGERUITests/Info.plist
      properties:
        CFBundleDisplayName: LEDMESSENGERUITests
        CFBundleShortVersionString: "1.0"
        CFBundleVersion: "1"
    
    sources:
      - path: LEDMESSENGERUITests
    
    settings:
      base:
        INFOPLIST_FILE: LEDMESSENGERUITests/Info.plist
        PRODUCT_BUNDLE_IDENTIFIER: com.led.messenger.LEDMESSENGERUITests
        PRODUCT_NAME: LEDMESSENGERUITests
        TEST_TARGET_NAME: LEDMESSENGER
    
    dependencies:
      - target: LEDMESSENGER

# Schemes for the project
schemes:
  LEDMESSENGER iOS:
    build:
      targets:
        LEDMESSENGER: all
        LEDMESSENGERTests: [test]
        LEDMESSENGERUITests: [test]
      preActions:
        - name: "Pre-build script"
          script: "echo 'Building iOS target'"
          settingsTarget: LEDMESSENGER
      parallelizeBuild: true
    run:
      config: Debug
      commandLineArguments:
        "-UIPreferredUserInterfaceStyle Dark": true
        "-FIRDebugEnabled": true
      environmentVariables:
        - variable: OS_ACTIVITY_MODE
          value: disable
          isEnabled: true
      stopOnEveryMainThreadCheckerIssue: true
      disableMainThreadChecker: false
      launchAutomaticallySubstyle: 2
    test:
      config: Debug
      targets:
        - LEDMESSENGERTests
        - LEDMESSENGERUITests
      gatherCoverageData: true
      coverageTargets:
        - LEDMESSENGER
      commandLineArguments:
        "-UIPreferredUserInterfaceStyle Dark": true
      environmentVariables:
        - variable: UITEST_RUNNING
          value: YES
          isEnabled: true
      language: en
      region: US
      onlyTestConfiguration: "Debug Tests"
      testPlans:
        - path: LEDMESSENGER.xctestplan
          defaultPlan: true
    profile:
      config: Release
      commandLineArguments:
        "-UIPreferredUserInterfaceStyle Dark": true
    analyze:
      config: Debug
    archive:
      config: Release
      customArchiveName: "LEDMESSENGER-$(CURRENT_PROJECT_VERSION)"
      revealArchiveInOrganizer: true

  LEDMESSENGER macOS:
    build:
      targets:
        LEDMESSENGER: all
        LEDMESSENGERTests: [test]
        LEDMESSENGERUITests: [test]
    run:
      config: Debug
      commandLineArguments:
        "-UIPreferredUserInterfaceStyle Dark": true
    test:
      config: Debug
      targets:
        - LEDMESSENGERTests
        - LEDMESSENGERUITests
      gatherCoverageData: true
    profile:
      config: Release
    analyze:
      config: Debug
    archive:
      config: Release

# XCConfig files for additional settings
configFiles:
  Debug: config/Debug.xcconfig
  Release: config/Release.xcconfig
  
# Set the default settings for each configuration
settings:
  configs:
    Debug:
      SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG
    Release:
      SWIFT_COMPILATION_MODE: wholemodule